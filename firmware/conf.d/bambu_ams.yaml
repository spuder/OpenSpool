globals:
  - id: selected_slot
    type: int
    restore_value: yes
    initial_value: "0"

script:
  - id: update_selected_slot
    then:
      - lambda: |-
          if (id(ams_number).state == 0) {
            id(selected_slot) = 0;
          } else {
            id(selected_slot) = (id(ams_number).state - 1) * 4 + id(slot_number).state;
          }
      - script.execute: update_leds

number:
  - platform: template
    name: "Number of AMS units"
    id: ams_units
    optimistic: false
    restore_value: true
    icon: mdi:printer-3d-nozzle
    min_value: 1
    max_value: 4
    step: 1
    initial_value: 1
    set_action:
      then:
        - lambda: |-
            if (id(bambu_model).state == "A1Mini" || id(bambu_model).state == "A1") {
              id(ams_units).publish_state(1);
            } else {
              id(ams_units).publish_state(x);
            }
    on_value:
      then:
        - lambda: |-
            ESP_LOGD("AMS", "Number of AMS units set: %d", (int)x);
    web_server:
      sorting_group_id: sorting_group_printer_settings
      sorting_weight: 100

  - platform: template
    name: "AMS Number"
    id: ams_number
    optimistic: false
    restore_value: true
    icon: mdi:printer-3d-nozzle
    min_value: 0
    max_value: 4
    step: 1
    initial_value: 1
    set_action:
      then:
        - lambda: |-
            if (id(bambu_model).state == "A1Mini" || id(bambu_model).state == "A1") {
              id(ams_number).publish_state(1);
            } else {
              if (x > id(ams_units).state) {
                id(ams_number).publish_state(id(ams_units).state);
              } else {
                id(ams_number).publish_state(x);
              }
            }
        - script.execute: update_selected_slot
    on_value:
      then:
        - lambda: |-
            ESP_LOGD("AMS", "AMS selected: %d", (int)x);
            // If AMS is 0, ensure slot is forced to 1
            if (x == 0 && id(slot_number).state != 1) {
                id(slot_number).publish_state(1);
            }
    web_server:
      sorting_group_id: sorting_group_ams

  - platform: template
    name: "Slot Number"
    id: slot_number
    optimistic: false
    restore_value: true
    icon: mdi:printer-3d-nozzle
    min_value: 1
    max_value: 4
    step: 1
    initial_value: 1
    mode: box
    set_action:
      then:
        - lambda: |-
            if (id(ams_number).state == 0) {
              id(slot_number).publish_state(1);
            } else {
              id(slot_number).publish_state(x);
            }
        - script.execute: update_selected_slot
    on_value:
      then:
        - lambda: |-
            ESP_LOGD("AMS", "Slot selected: %d", (int)x);
            // If AMS is 0, ensure slot is forced to 1
            if (id(ams_number).state == 0 && x != 1) {
                id(slot_number).publish_state(1);
            }
    web_server:
      sorting_group_id: sorting_group_ams
