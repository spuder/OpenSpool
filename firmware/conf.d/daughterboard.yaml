# Scripts for LED control
script:
- id: clear_all_slot_leds
  then:
  - light.addressable_set:
      id: neopixel_light
      range_from: 0
      range_to: !lambda "return ${led_count} - 1;"
      red: 0%
      green: 0%
      blue: 0%

- id: set_slot_led
  parameters:
    slot_number: int8_t
  then:
  - light.addressable_set:
      id: neopixel_light
      range_from: !lambda "return slot_number;"
      range_to: !lambda "return slot_number;"
      red: 100%
      green: 100%
      blue: 100%
      white: 100%
      color_brightness: 90%

# Define the select component
select:
- platform: template
  name: "AMS Active Slot"
  id: active_slot_select
  options:
  - "External"
  - "1"
  - "2"
  - "3"
  - "4"
  initial_option: "External"
  optimistic: true
  restore_value: false
  set_action:
    then:
    - script.execute: clear_all_slot_leds
    - if:
        condition:
          lambda: 'return x == "1";'
        then:
        - script.execute:
            id: set_slot_led
            slot_number: 1
    - if:
        condition:
          lambda: 'return x == "2";'
        then:
        - script.execute:
            id: set_slot_led
            slot_number: 2
    - if:
        condition:
          lambda: 'return x == "3";'
        then:
        - script.execute:
            id: set_slot_led
            slot_number: 3
    - if:
        condition:
          lambda: 'return x == "4";'
        then:
        - script.execute:
            id: set_slot_led
            slot_number: 4
    - if:
        condition:
          lambda: 'return x == "External";'
        then:
        - script.execute:
            id: set_slot_led
            slot_number: 0
  state_topic: null
  web_server:
    sorting_group_id: sorting_group_filament_settings
    sorting_weight: 190

# Template switches that automatically reflect active_slot state
switch:
- platform: template
  name: "Slot 1 Switch"
  id: slot_1_switch
  internal: true
  optimistic: true
  state_topic: null
  lambda: 'return id(active_slot_select).state == "1";'
- platform: template
  name: "Slot 2 Switch"
  id: slot_2_switch
  internal: true
  optimistic: true
  state_topic: null
  lambda: 'return id(active_slot_select).state == "2";'
- platform: template
  name: "Slot 3 Switch"
  id: slot_3_switch
  internal: true
  optimistic: true
  state_topic: null
  lambda: 'return id(active_slot_select).state == "3";'
- platform: template
  name: "Slot 4 Switch"
  id: slot_4_switch
  internal: true
  optimistic: true
  state_topic: null
  lambda: 'return id(active_slot_select).state == "4";'

binary_sensor:
- platform: gpio
  pin:
    number: ${daughterboard_slot_1_button_pin}
    mode: INPUT_PULLUP
    inverted: true
  name: "Slot 1 Button"
  internal: true
  filters:
  - delayed_on: 20ms
  - delayed_off: 20ms
  on_press:
    then:
    - if:
        condition:
          lambda: 'return id(active_slot_select).state == "1";'
        then:
        - select.set:
            id: active_slot_select
            option: "External"
        else:
        - select.set:
            id: active_slot_select
            option: "1"

- platform: gpio
  pin:
    number: ${daughterboard_slot_2_button_pin}
    mode: INPUT_PULLUP
    inverted: true
  name: "Slot 2 Button"
  internal: true
  filters:
  - delayed_on: 20ms
  - delayed_off: 20ms
  on_press:
    then:
    - if:
        condition:
          lambda: 'return id(active_slot_select).state == "2";'
        then:
        - select.set:
            id: active_slot_select
            option: "External"
        else:
        - select.set:
            id: active_slot_select
            option: "2"

- platform: gpio
  pin:
    number: ${daughterboard_slot_3_button_pin}
    mode: INPUT_PULLUP
    inverted: true
  name: "Slot 3 Button"
  internal: true
  filters:
  - delayed_on: 20ms
  - delayed_off: 20ms
  on_press:
    then:
    - if:
        condition:
          lambda: 'return id(active_slot_select).state == "3";'
        then:
        - select.set:
            id: active_slot_select
            option: "External"
        else:
        - select.set:
            id: active_slot_select
            option: "3"

- platform: gpio
  pin:
    number: ${daughterboard_slot_4_button_pin}
    mode: INPUT_PULLUP
    inverted: true
  name: "Slot 4 Button"
  internal: true
  filters:
  - delayed_on: 20ms
  - delayed_off: 20ms
  on_press:
    then:
    - if:
        condition:
          lambda: 'return id(active_slot_select).state == "4";'
        then:
        - select.set:
            id: active_slot_select
            option: "External"
        else:
        - select.set:
            id: active_slot_select
            option: "4"
