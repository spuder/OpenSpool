# Define the select component
select:
  - platform: template
    name: "Active Slot"
    id: active_slot_select
    options:
      - "External"
      - "1"
      - "2"
      - "3"
      - "4"
    initial_option: "External"
    optimistic: true
    on_value:
      then:
        - script.execute: select_slot

# Modify the script to use the select value
script:
  - id: select_slot
    then:
      - switch.turn_off: slot_1_switch
      - switch.turn_off: slot_2_switch
      - switch.turn_off: slot_3_switch
      - switch.turn_off: slot_4_switch
      - lambda: |-
          auto current_option = id(active_slot_select).state;
          int slot = 0;
          if (current_option == "1") slot = 1;
          else if (current_option == "2") slot = 2;
          else if (current_option == "3") slot = 3;
          else if (current_option == "4") slot = 4;
          // No action needed for "External" as all switches are already off
          
          switch (slot) {
            case 1: id(slot_1_switch).turn_on(); break;
            case 2: id(slot_2_switch).turn_on(); break;
            case 3: id(slot_3_switch).turn_on(); break;
            case 4: id(slot_4_switch).turn_on(); break;
          }

switch:
  - platform: template
    name: "Slot 1 Switch"
    id: slot_1_switch
    internal: true
    optimistic: true
  - platform: template
    name: "Slot 2 Switch"
    id: slot_2_switch
    internal: true
    optimistic: true
  - platform: template
    name: "Slot 3 Switch"
    id: slot_3_switch
    internal: true
    optimistic: true
  - platform: template
    name: "Slot 4 Switch"
    id: slot_4_switch
    internal: true
    optimistic: true

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO6
      mode: INPUT_PULLUP
      inverted: true
    name: "Slot 1 Button"
    internal: true
    filters:
      - delayed_on: 20ms
      - delayed_off: 20ms
    on_press:
      then:
        - lambda: |-
            if (id(active_slot_select).state == "1") {
              id(active_slot_select).publish_state("External");
            } else {
              id(active_slot_select).publish_state("1");
            }

  - platform: gpio
    pin:
      number: GPIO7
      mode: INPUT_PULLUP
      inverted: true
    name: "Slot 2 Button"
    internal: true
    filters:
      - delayed_on: 20ms
      - delayed_off: 20ms
    on_press:
      then:
        - lambda: |-
            if (id(active_slot_select).state == "2") {
              id(active_slot_select).publish_state("External");
            } else {
              id(active_slot_select).publish_state("2");
            }

  - platform: gpio
    pin:
      number: GPIO8
      mode: INPUT_PULLUP
      inverted: true
    name: "Slot 3 Button"
    internal: true
    filters:
      - delayed_on: 20ms
      - delayed_off: 20ms
    on_press:
      then:
        - lambda: |-
            if (id(active_slot_select).state == "3") {
              id(active_slot_select).publish_state("External");
            } else {
              id(active_slot_select).publish_state("3");
            }

  - platform: gpio
    pin:
      number: GPIO9
      mode: INPUT_PULLUP
      inverted: true
    name: "Slot 4 Button"
    internal: true
    filters:
      - delayed_on: 20ms
      - delayed_off: 20ms
    on_press:
      then:
        - lambda: |-
            if (id(active_slot_select).state == "4") {
              id(active_slot_select).publish_state("External");
            } else {
              id(active_slot_select).publish_state("4");
            }
